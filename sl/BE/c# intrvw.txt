1.FEATURES OF C# -GENERAL PURPOSE PROGRAMMING LANGUAGE
.SIMPLE, POWERFULL AND PURE OBJECT - ORIENTED
.VERSIONING-DIFFERENT VERSIONS EXIST SIDE BY SIDE
.TYPE SAFE-THE CODES WILL ACCESS ONLY THE AUTHORIZED MEMORY LOCATION
.RICH LIBRARY- MANY INBUILT FUNCTIONS
.SUPPORTS COMPONENT ORIENTED PROGRAMMING
.CAN DEVELOP IOS, WINDOWS PHONE NATIVE APPS USING XAMARIN FRAMEWORK

2.MANAGED AND UNMANAGED CODE
MANAGED-MADE USING .NET FRAMEWORK AND COMPILED USING COMMON LANGUAGE RUNTIME (CLR)
UNMANAGED-DEVELOPED OUTSIDE .NET FRAMEWORK BY USING POWER POINT, EXCEL ETC AND DOESN'Y RUN UNDER CONTROL OF CLR

3.STRUCT AND CLASS
STRUCT
.USER DEFINE DATA TYPE
.VALUE TYPE AND STORED IN STACK
.USED FOR SMALLER AMOUNT OF DATAS
.CANT INHERIT FROM OTHER TYPES
.CANT BE ABSTRACT 
.CANT HAVE DISTRUCTORS

CLASS
.USER DEFINED DATA TYPE
.REFERENCE TYPE AND STORES DATA IN HEAP
.USED FOR LARGE NUMBER OF DATAS
.CAN INHERIT DATA FROM OTHER TYPES
.CAN BE ABSTRACT
.CAN HAVE DISTRUCTORS

4.BOXING AND UNBOXING
BOXING- IMPLICIT CONVERSION FROM VALUE TYPE TO REFERENCE TYPE
UNBOXING-EXPLICIT CONVERSION OF REFERENCE TYPE TO VALUE TYPE

5.OVERLOADING AND OVERRIDING
OVERLOADING
HERE SAME FUNCTION NAME AND DIFFERENT PARAMETER
OVERRIDING
HERE THE FUNCTIONALITY OF A METHOD IS CHANGED IN A CHILD CLASS 

6.HOW IS ENCAPSULATION IMPLEMENTED IN C#
ENCAPSULATION IS THE PROCESS OF COMBINING DATA MEMBERS AND MEMBER FUNCTION IN TO A SINGLE UNIT
IMPLEMENTED BY USING ACCESS SPECIFIERS
.PUBLIC:CAN BE ACCESSEDFROM ANY WHERE OF THE CLASS
.PRIVATE:CAN BE ACCESSED BY THE FUNCTIONS OF ONLY THAT SPECIFIC CLASS
.PROTECTED:CAN BE ACCESSED BY CHILD CLASSES ALSO, HELPS IMPLEMENTING INHERITANCE

7.PRE-PROCESSSOR DIRECTIVES
PROCESS OF TELLING THE COMPILER TO PRE-PROCESS THE INFORMATION BEFORE THE ACTUAL COMBILATION BEGINS
PREPROCESSOR DIRECTIVES BEGIN WITH #
SINCE THESE ARE NOT STATEMENT, DONT NEED SEMI COLON AT THE END

8.POLYMORPHISM-MANY FORMS
ENABLES A CLASS TO HAVE MUTIPLE DEFENITION WITH SAME FUNCTION NAME
.STATIC/COMPILE TIME/OVERLOADING POLYMORPHISM-EARLY BINDING
SAME FUNCTION NAME BUT DIFFERENT PARAMETER
IMPLEMEMENTED USING METHOD OVERLOADING AND OPERATOR OVERLOADING
.DYNAMIC/RUNTIME/OVERRIDING POLYMORPHISM- LATE BINDING
IMPLEMENTED USING INHERITANCE AND VIRTUAL FUNCTIONS
CHANGING THE BEHAVIOUR OF METHOD,LIKE HAVING ANOTHER METHOD WITH SAME PROTOTYPE

9. EARLY BINDING 
LINKING AN OBJECT WITH ITS FUNCTIONALITY DURING THE COMPILE TIME 
ALSO CALLED AS STATIC BINDING.

10.NEED OF "USING" STATEMENT IN C#
FOR INCLUDING NAMESPACE IN A PROGRAM
MULTIPLE USING STATEMENT CAN BE USED IN A PROGRAM

########11.DLL(Dynamic Link Library) Hell PROBLEM IN C#
DLL PROBLEM ARISE WHEN MULTIPLE APPLICATION SHARE COMMON DLL
IF A NEWER VERSION OF ANY APPLICATION WAS INTALLED ALL THE OTHER APPLICATION WHICH WAS DEPENDING
ON THAT PREVIOUS VERSION WILL GET CRASHED
THIS IS BECAUSE THE NEW VERSION INFORMATION WAS NOT RECORDED ON THE SYSTEM

SOLVED BY USING ASSEMBLY VERSIONING IN .NET
ASSEMBLY VERSIONING ALLOWS APPLICATION TO SPECIFY NOT ONLY THE LIBRARY NEEDS TO RUN BUT THE LIBRARY VERSION ALSO

12.HOW TO PREVENT CLASS FROM BEING INHERITED
THIS IS DONE BY USING KEYWORD "SEALED"

13.WHEN DO WE DECLARE A CLASS AS AN ABSTRACT
ABSTRACT MEANS SHOWING ONLY ESSENTIAL DETAILS TO USER
ABSTRACT CLASS CANNOT BE DEFINED INSIDE , IT HAVE TO BE INHERITED AND DEFINED BY CHILD-CLASSES

ABSTRACT CLASSES ARE USED IN LARGE PROJECTS TO SHARE COMMON FUNCTIONALITY WITH DERIVED CLASSES

14.ABSTRACT CLASS AND INTERFAACE
ABSTRACT CLASS 
.CAN HAVE IMPLEMENTATION FOR SOME OF ITS MEMBER
.CAN HAVE BOTH ABSTACTED METHODS AND NON ABSTRACT METHODS
.MEMBERS CAN HAVE ACCESS MODIFIERS

INTETRFACE
.CANT HAVE IMPLEMENTATION OF ANY OF ITS MEMBERS
.ALL THE METHOD WILL BE LIKE ABSTRACTED ONE, IE THEY ARE JUST DECLARED
AND WILL BE DEFENETLY DEFINED IN THE CHILD CLASS INHERITING IT
.MEMBERS CANT HAVE ACCESS MODIFIERS
.INTERFACE IS PUBLIC BY DEFAULY
 



